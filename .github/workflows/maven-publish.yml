name: build-and-deploy
on:
  push:
    branches: [ "main" ]          # trigger on every push to main

jobs:
  deploy:
    runs-on: ubuntu-latest        # GitHub-hosted runner

    steps:
    # 1) Pull the latest code
    - name: Checkout source
      uses: actions/checkout@v4

    # 2) Build the Spring Boot JAR (no tests to save time)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: "17"

    - name: Build production JAR
      run: mvn -Pprod -DskipTests clean package

    # 3) Copy the finished JAR to your server
    - name: Upload JAR to fotsrv
      uses: appleboy/scp-action@v0.1.4
      with:
        host:      ${{ secrets.DEPLOY_HOST }}     # 209.127.228.55
        username:  ${{ secrets.DEPLOY_USER }}     # fotadmin
        key:       ${{ secrets.DEPLOY_KEY }}      # private key you added
        source:    target/carcontracts.jar
        target:    /home/fotadmin/jars/

    # 4) Rebuild the Docker image and restart the container on the server
    - name: Restart carcontracts container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host:      ${{ secrets.DEPLOY_HOST }}
        username:  ${{ secrets.DEPLOY_USER }}
        key:       ${{ secrets.DEPLOY_KEY }}
        script: |
          set -e
          cd /home/fotadmin/jars

          echo "Stopping old container (if running)…"
          docker stop carcontracts || true
          docker rm   carcontracts || true

          echo "Building new image…"
          docker build -t carcontracts:latest .

          echo "Starting container…"
          docker run -d --name carcontracts \
                     --restart always \
                     -p 8083:8083 \
                     carcontracts:latest

          echo "Cleaning up dangling images…"
          docker image prune -f
